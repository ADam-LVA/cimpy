variables:
    DOCKER_TAG_DEV: ${CI_COMMIT_REF_NAME}
    DOCKER_IMAGE_DEV: cimpy

stages:
- prepare
- test
- generate
- deploy


docker:
    stage: prepare
    script:
        - docker build -t ${DOCKER_IMAGE_DEV}:${DOCKER_TAG_DEV} .
    tags:
        - shell
        - linux


documentation:
    stage: generate
    script:
        - cd scripts && ./docu.sh
    image: ${DOCKER_IMAGE_DEV}:${DOCKER_TAG_DEV}
    artifacts:
        paths:
            - documentation
    tags:
        - docker


pages:
    stage: deploy
    script:
        - mkdir .public
        - cp -r documentation/_build/html .public
        - mv .public public
    artifacts:
        paths:
            - public


test:import:
    stage: test
    variables:
        PYTHONPATH: "build/Source/Python:Source/Python"
    script:
        - python3 setup.py develop
        - cd tests && pytest -v test_import.py
    image: ${DOCKER_IMAGE_DEV}:${DOCKER_TAG_DEV}
    tags:
        - docker

test:export-against-imported-files:
    stage: test
    variables:
        PYTHONPATH: "build/Source/Python:Source/Python"
    script:
        - python3 setup.py develop
        - cd tests && pytest -v test_export_with_imported_files.py
    image: ${DOCKER_IMAGE_DEV}:${DOCKER_TAG_DEV}
    tags:
        - docker

test:export-against-exported-files:
    stage: test
    variables:
        PYTHONPATH: "build/Source/Python:Source/Python"
    script:
        - python3 setup.py develop
        - cd tests && pytest -v test_export_with_exported_files.py
    image: ${DOCKER_IMAGE_DEV}:${DOCKER_TAG_DEV}
    tags:
        - docker